CREATE TABLE "Users" (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255)
);

CREATE TABLE "Orders" (
    order_id SERIAL PRIMARY KEY,
    order_date VARCHAR(255),
    user_id INT,
    FOREIGN KEY ("user_id") REFERENCES "Users"(user_id) ON DELETE CASCADE
);

CREATE TABLE "Products" (
    product_id SERIAL PRIMARY KEY,
    product_name VARCHAR(255),
    price INT
);

CREATE TABLE "Order_Items" (
    order_item_id SERIAL PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    FOREIGN KEY ("order_id") REFERENCES "Orders"(order_id) ON DELETE CASCADE,
    FOREIGN KEY ("product_id") REFERENCES "Products"(product_id) ON DELETE CASCADE
);

INSERT INTO "Users" (username, email)
VALUES 
('JohnDoe', 'john@example.com'),
('JaneSmith', 'jane@example.com'),
('AliceWong', 'alice@example.com'),
('BobLee', 'bob@example.com'),
('CharlieLim', 'charlie@example.com');

INSERT INTO "Orders" (order_date, user_id)
VALUES 
('2024-09-01', 1),
('2024-09-02', 2),
('2024-09-03', 3),
('2024-09-04', 4),
('2024-09-05', 5);

INSERT INTO "Products" (product_name, price)
VALUES 
('Laptop', 1000.00),
('Phone', 500.00),
('Tablet', 300.00),
('Monitor', 150.00),
('Keyboard', 30.00),
('Mouse', 20.00),
('Printer', 200.00),
('Speaker', 75.00),
('Router', 100.00),
('Headphones', 50.00);

INSERT INTO "Order_Items" (order_id, product_id, quantity)
VALUES 
(1, 1, 2),
(1, 5, 1),
(2, 2, 1),
(2, 7, 1),
(3, 3, 3),
(3, 6, 2),
(4, 4, 1),
(4, 8, 2),
(5, 9, 1),
(5, 10, 3);




//// Task 3.1

SELECT o.order_id, u.username
FROM "Orders" AS o
INNER JOIN "Users" AS u ON u.user_id=o.user_id;




/// Task 3.2

SELECT u.username, a.product_name, oi.quantity
FROM "Users" AS u
JOIN "Order_Items" AS oi ON oi.order_id = oi.order_id
JOIN "Orders" AS o ON o.user_id = u.user_id
JOIN "Products" AS a ON a.product_id = oi.product_id;




// Task 3.3

SELECT oi.order_id, SUM(oi.quantity) AS "total Quantity"
FROM "Orders" AS o
JOIN "Order_Items" AS oi ON o.order_id = oi.order_id 
GROUP BY oi.order_id 
ORDER BY oi.order_id ASC;




// Task 3.4

SELECT oi.order_id, SUM(pr.price * oi.quantity) AS "total_price"
SELECT oi.order_id, SUM(pr.price * oi.quantity) AS "total_price"
FROM "Products" AS pr
JOIN "Order_Items" AS oi ON oi.product_id = pr.product_id 
GROUP BY oi.order_id 
ORDER BY oi.order_id ASC;




// Task 3.5

SELECT u.username, oi.order_id, pr.product_name, oi.quantity
FROM "Users" AS u
JOIN "Orders" AS o ON u.user_id = o.user_id 
JOIN "Order_Items" AS oi on oi.order_id = o.order_id
JOIN "Products" AS pr on pr.product_id = oi.product_id




// Task 3.6

SELECT pr.product_name, pr.price
FROM "Users" AS u 
JOIN "Orders" AS o ON u.user_id = o.user_id 
JOIN "Order_Items" AS oi on oi.order_id = o.order_id
JOIN "Products" AS pr on pr.product_id = oi.product_id
WHERE (pr.price > 100 AND u.username = 'BobLee' )





// Task 3.7

SELECT u.username, SUM (pr.price * oi.quantity) AS "total_spent"
FROM "Users" AS u 
JOIN "Orders" AS o ON u.user_id = o.user_id 
JOIN "Order_Items" AS oi on oi.order_id = o.order_id
JOIN "Products" AS pr on pr.product_id = oi.product_id
GROUP BY u.username
ORDER BY total_spent DESC;